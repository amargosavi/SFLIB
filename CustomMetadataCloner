// Code Generated by Sidekick is for learning and experimentation purposes only.
public class CustomMetadataCloner {
    /**
     * Clones a Custom Metadata record by DeveloperName, inserts a new record with a specified new DeveloperName.
     * @param metadataTypeName API name of the Custom Metadata Type (e.g., 'Country_Config__mdt')
     * @param existingDeveloperName DeveloperName of the record to clone
     * @param newDeveloperName DeveloperName for the new cloned record
     * @return Async Job Id for deployment or error message
     */
    public static String cloneCustomMetadata(
        String metadataTypeName,
        String existingDeveloperName,
        String newDeveloperName
    ) {
        try {
            // Query the existing metadata record
            String sObjectTypeName = metadataTypeName;
            String query = 'SELECT ';
            Map<String, Schema.SObjectField> fieldMap =
                Schema.getGlobalDescribe().get(metadataTypeName).getDescribe().fields.getMap();
            List<String> fieldsToGet = new List<String>();
            for (String f : fieldMap.keySet()) {
                fieldsToGet.add(f);
            }
            query += String.join(fieldsToGet, ',');
            query += ' FROM ' + sObjectTypeName + ' WHERE DeveloperName = :existingDeveloperName LIMIT 1';
            List<SObject> existingRecords = Database.query(query);
            if (existingRecords.isEmpty()) {
                return 'No record found with DeveloperName: ' + existingDeveloperName;
            }
            SObject src = existingRecords[0];

            // Prepare Metadata clone
            Metadata.CustomMetadata newRecord = new Metadata.CustomMetadata();
            newRecord.fullName = metadataTypeName + '.' + newDeveloperName;

            // Label/MasterLabel
            if (src.get('MasterLabel') != null) {
                newRecord.label = (String)src.get('MasterLabel');
            } else if (src.get('Label') != null) {
                newRecord.label = (String)src.get('Label');
            } else {
                newRecord.label = newDeveloperName;
            }

            // Clone custom fields
            List<Metadata.CustomMetadataValue> cmValues = new List<Metadata.CustomMetadataValue>();
            for (String field : fieldMap.keySet()) {
                // Must skip non-field metadata fields
                if (field == 'DeveloperName' || field == 'MasterLabel' || field == 'Label') continue;
                Object val = src.get(field);
                if (val != null) {
                    Metadata.CustomMetadataValue mdv = new Metadata.CustomMetadataValue();
                    mdv.field = field;
                    mdv.value = val;
                    cmValues.add(mdv);
                }
            }
            newRecord.values = cmValues;

            // Deploy
            Metadata.DeployContainer mdContainer = new Metadata.DeployContainer();
            mdContainer.addMetadata(newRecord);

            Id asyncJobId = Metadata.Operations.enqueueDeployment(mdContainer, null);
            return 'Enqueued Metadata Deployment. Async Job Id: ' + String.valueOf(asyncJobId)
                + ' (Track using Metadata.Operations.retrieveDeploymentStatus)';
        } catch (Exception e) {
            return 'Exception: ' + e.getMessage();
        }
    }
}
